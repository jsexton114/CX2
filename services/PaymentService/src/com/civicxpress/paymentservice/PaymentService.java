/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.civicxpress.paymentservice;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.ServletException;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.springframework.beans.factory.annotation.Autowired;

import com.wavemaker.runtime.security.SecurityService;
import com.wavemaker.runtime.service.annotations.ExposeToClient;
import com.wavemaker.runtime.service.annotations.HideFromClient;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

import com.civicxpress.checkoutservice.CheckoutService;
import com.stripe.Stripe;
import com.stripe.exception.APIConnectionException;
import com.stripe.exception.APIException;
import com.stripe.exception.AuthenticationException;
import com.stripe.exception.CardException;
import com.stripe.exception.InvalidRequestException;
import com.stripe.exception.StripeException;
import com.stripe.model.Charge;
import com.stripe.net.RequestOptions;

//import com.civicxpress.paymentservice.model.*;

/**
 * This is a singleton class with all its public methods exposed as REST APIs via generated controller class.
 * To avoid exposing an API for a particular public method, annotate it with @HideFromClient.
 *
 * Method names will play a major role in defining the Http Method for the generated APIs. For example, a method name
 * that starts with delete/remove, will make the API exposed as Http Method "DELETE".
 *
 * Method Parameters of type primitives (including java.lang.String) will be exposed as Query Parameters &
 * Complex Types/Objects will become part of the Request body in the generated API.
 */
 
 /*
    ***** !IMPORTANT! REGARDING ANY CHANGE MADE TO THIS CLASS *****
 
    NOTE: Anytime this class is altered, the @ResponseBody declaration will need to be removed again from the callback()'s Obj argument in the PaymentController.java generated by Wave Maker. E.g.:
  
    public void callback(HttpServletRequest request, HttpServletResponse response, Object obj) throws ServletException {
  
    See:
    Content type 'application/x-www-form-urlencoded;charset=UTF-8' not supported
    https://stackoverflow.com/questions/34782025/http-post-request-with-content-type-application-x-www-form-urlencoded-not-workin/38252762

 */
 
@ExposeToClient
public class PaymentService {

    private static final Logger logger = LoggerFactory.getLogger(PaymentService.class);

    @Autowired
    private SecurityService securityService;

    /**
     * This is sample java operation that accepts an input from the caller and responds with "Hello".
     *
     * SecurityService that is Autowired will provide access to the security context of the caller. It has methods like isAuthenticated(),
     * getUserName() and getUserId() etc which returns the information based on the caller context.
     *
     * Methods in this class can declare HttpServletRequest, HttpServletResponse as input parameters to access the
     * caller's request/response objects respectively. These parameters will be injected when request is made (during API invocation).
     */
    
    public void callback(HttpServletRequest request, HttpServletResponse response, Object obj) throws ServletException {
        String stripeToken = null; 

		Stripe.apiKey = "sk_test_YnCjI8HSaQteOmL7R8xUzU85";
		stripeToken = request.getParameter("stripeToken");
        logger.debug("stripeToken: " + stripeToken);
    
        Map map = request.getParameterMap();
        Iterator it = map.keySet().iterator();
        while (it.hasNext()) {
            String key = (String) it.next();
            logger.debug("!JS!" + key + ": " + map.get(key));
        }
    
        String returnUrl = null;
        Cookie stripeTokenCookie = new Cookie("stripeToken", stripeToken);
        stripeTokenCookie.setMaxAge(120); // two minutes
        stripeTokenCookie.setPath("/");
        response.addCookie(stripeTokenCookie);
        System.out.println("stripeTokenCookie: " + stripeTokenCookie);
 	    returnUrl = request.getContextPath() + "/#/MyCart?stripeToken=" + stripeToken; 
 	    System.out.println("request.getContextPath(): " + request.getContextPath());
 	    System.out.println("request.getScheme(): " + request.getScheme());
 	    System.out.println("request.getServerName(): " + request.getServerName());
 	    System.out.println("request.getServletPath(): " + request.getServletPath());
 	    System.out.println("returnUrl: " + returnUrl);

 	    try {
		    response.sendRedirect(returnUrl);
 	    } catch (IOException e) {
            e.printStackTrace();
 	    }

    }


/*
    public void callback(HttpServletRequest request, HttpServletResponse response,Object obj) throws ServletException {
        logger.debug("Callback invoked");
 	    try {
 	          //String page="you want to redirect ";
 	          //page="Main";
 	        //response.sendRedirect(request.getContextPath() + "#/" + page);
 	        //response.sendRedirect("https://www.wavemakeronline.com/run-j4lrgncwgl/CivicXpress/#/Main");
 	        
            String stripeToken = request.getParameter("stripeToken");
            logger.debug("stripeToken: " + stripeToken);

 	    
 	    } catch (Exception ex) {
 	        throw new ServletException(ex);
 	    }
    }
*/

}
