/**This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/
package com.civicxpress.checkoutservice.controller;

import com.civicxpress.checkoutservice.CheckoutService;
import java.lang.Long;
import com.wavemaker.runtime.file.model.DownloadResponse;
import java.lang.String;
import java.math.BigDecimal;
import javax.servlet.http.HttpServletRequest;
import java.lang.Exception;
import javax.mail.MessagingException;
import org.springframework.web.bind.annotation.*;
import org.springframework.http.MediaType;
import org.springframework.beans.factory.annotation.Autowired;
import com.wordnik.swagger.annotations.Api;
import com.wordnik.swagger.annotations.ApiOperation;
import com.wordnik.swagger.annotations.ApiParam;
import com.wavemaker.tools.api.core.annotations.WMAccessVisibility;
import com.wavemaker.tools.api.core.models.AccessSpecifier;

@RestController
@RequestMapping(value = "/checkout")
public class CheckoutController {

    @Autowired
    private CheckoutService checkoutService;

    @RequestMapping(value = "/receiptPdf", method = RequestMethod.POST)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public byte[] createReceiptPdf(@RequestParam(value = "transactionId", required = false) Long transactionId) {
        return checkoutService.createReceiptPdf(transactionId);
    }

    @RequestMapping(value = "/downloadReceiptPdf", produces = "application/octet-stream", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public DownloadResponse downloadReceiptPdf(@RequestParam(value = "transactionId", required = false) Long transactionId) {
        return checkoutService.downloadReceiptPdf(transactionId);
    }

    @RequestMapping(value = "/municipalityCheckout", method = RequestMethod.POST)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public void municipalityCheckout(@RequestParam(value = "municipalityId", required = false) Long municipalityId, @RequestParam(value = "paymentMethod", required = false) String paymentMethod, @RequestParam(value = "paymentNumber", required = false) String paymentNumber, @RequestParam(value = "amountReceived", required = false) BigDecimal amountReceived, @RequestParam(value = "comments", required = false) String comments, @RequestBody Long[] feeIds, HttpServletRequest request) throws Exception {
        checkoutService.municipalityCheckout(municipalityId, paymentMethod, paymentNumber, amountReceived, comments, feeIds, request);
    }

    @RequestMapping(value = "/sendReceipt", method = RequestMethod.POST)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public void sendReceipt(@RequestParam(value = "recipientEmail", required = false) String recipientEmail, @RequestBody byte[] receiptBytes) throws MessagingException {
        checkoutService.sendReceipt(recipientEmail, receiptBytes);
    }
}
