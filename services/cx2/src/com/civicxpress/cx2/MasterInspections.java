/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.civicxpress.cx2;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * MasterInspections generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`MasterInspections`")
public class MasterInspections implements Serializable {

    private Integer id;
    private String inspectionTitle;
    private String inspectionGuid;
    private String relatedCaseGuid;
    private String relatedProjectGuid;
    private Integer inspectionDesignId;
    private Integer gisId;
    private Integer inspecOutcomeId;
    private String requestedBy;
    private Date requestedAt;
    private String modifiedBy;
    private Date modifiedAt;
    private String assignedTo;
    private Integer inspectionCatId;
    private String relatedFormGuid;
    private InspectionOutcome inspectionOutcome;
    private MasterForms masterForms;
    private Gisrecords gisrecords;
    private InspectionDesign inspectionDesign;
    private Projects projects;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`InspectionTitle`", nullable = true, length = 255)
    public String getInspectionTitle() {
        return this.inspectionTitle;
    }

    public void setInspectionTitle(String inspectionTitle) {
        this.inspectionTitle = inspectionTitle;
    }

    @Column(name = "`InspectionGuid`", nullable = true, length = 255)
    public String getInspectionGuid() {
        return this.inspectionGuid;
    }

    public void setInspectionGuid(String inspectionGuid) {
        this.inspectionGuid = inspectionGuid;
    }

    @Column(name = "`RelatedCaseGuid`", nullable = true, length = 255)
    public String getRelatedCaseGuid() {
        return this.relatedCaseGuid;
    }

    public void setRelatedCaseGuid(String relatedCaseGuid) {
        this.relatedCaseGuid = relatedCaseGuid;
    }

    @Column(name = "`RelatedProjectGuid`", nullable = true, length = 32)
    public String getRelatedProjectGuid() {
        return this.relatedProjectGuid;
    }

    public void setRelatedProjectGuid(String relatedProjectGuid) {
        this.relatedProjectGuid = relatedProjectGuid;
    }

    @Column(name = "`InspectionDesignId`", nullable = true, scale = 0, precision = 10)
    public Integer getInspectionDesignId() {
        return this.inspectionDesignId;
    }

    public void setInspectionDesignId(Integer inspectionDesignId) {
        this.inspectionDesignId = inspectionDesignId;
    }

    @Column(name = "`GisId`", nullable = true, scale = 0, precision = 10)
    public Integer getGisId() {
        return this.gisId;
    }

    public void setGisId(Integer gisId) {
        this.gisId = gisId;
    }

    @Column(name = "`InspecOutcomeId`", nullable = true, scale = 0, precision = 10)
    public Integer getInspecOutcomeId() {
        return this.inspecOutcomeId;
    }

    public void setInspecOutcomeId(Integer inspecOutcomeId) {
        this.inspecOutcomeId = inspecOutcomeId;
    }

    @Column(name = "`RequestedBy`", nullable = true, length = 255)
    public String getRequestedBy() {
        return this.requestedBy;
    }

    public void setRequestedBy(String requestedBy) {
        this.requestedBy = requestedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`RequestedAt`", nullable = true)
    public Date getRequestedAt() {
        return this.requestedAt;
    }

    public void setRequestedAt(Date requestedAt) {
        this.requestedAt = requestedAt;
    }

    @Column(name = "`ModifiedBy`", nullable = true, length = 255)
    public String getModifiedBy() {
        return this.modifiedBy;
    }

    public void setModifiedBy(String modifiedBy) {
        this.modifiedBy = modifiedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`ModifiedAt`", nullable = true)
    public Date getModifiedAt() {
        return this.modifiedAt;
    }

    public void setModifiedAt(Date modifiedAt) {
        this.modifiedAt = modifiedAt;
    }

    @Column(name = "`AssignedTo`", nullable = true, length = 255)
    public String getAssignedTo() {
        return this.assignedTo;
    }

    public void setAssignedTo(String assignedTo) {
        this.assignedTo = assignedTo;
    }

    @Column(name = "`InspectionCatId`", nullable = true, scale = 0, precision = 10)
    public Integer getInspectionCatId() {
        return this.inspectionCatId;
    }

    public void setInspectionCatId(Integer inspectionCatId) {
        this.inspectionCatId = inspectionCatId;
    }

    @Column(name = "`RelatedFormGuid`", nullable = true, length = 255)
    public String getRelatedFormGuid() {
        return this.relatedFormGuid;
    }

    public void setRelatedFormGuid(String relatedFormGuid) {
        this.relatedFormGuid = relatedFormGuid;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`InspecOutcomeId`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public InspectionOutcome getInspectionOutcome() {
        return this.inspectionOutcome;
    }

    public void setInspectionOutcome(InspectionOutcome inspectionOutcome) {
        if(inspectionOutcome != null) {
            this.inspecOutcomeId = inspectionOutcome.getId();
        }

        this.inspectionOutcome = inspectionOutcome;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`RelatedFormGuid`", referencedColumnName = "`FormGUID`", insertable = false, updatable = false)
    public MasterForms getMasterForms() {
        return this.masterForms;
    }

    public void setMasterForms(MasterForms masterForms) {
        if(masterForms != null) {
            this.relatedFormGuid = masterForms.getFormGuid();
        }

        this.masterForms = masterForms;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`GisId`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public Gisrecords getGisrecords() {
        return this.gisrecords;
    }

    public void setGisrecords(Gisrecords gisrecords) {
        if(gisrecords != null) {
            this.gisId = gisrecords.getId();
        }

        this.gisrecords = gisrecords;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`InspectionDesignId`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public InspectionDesign getInspectionDesign() {
        return this.inspectionDesign;
    }

    public void setInspectionDesign(InspectionDesign inspectionDesign) {
        if(inspectionDesign != null) {
            this.inspectionDesignId = inspectionDesign.getId();
        }

        this.inspectionDesign = inspectionDesign;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`RelatedProjectGuid`", referencedColumnName = "`ProjectGUID`", insertable = false, updatable = false)
    public Projects getProjects() {
        return this.projects;
    }

    public void setProjects(Projects projects) {
        if(projects != null) {
            this.relatedProjectGuid = projects.getProjectGuid();
        }

        this.projects = projects;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof MasterInspections)) return false;
        final MasterInspections masterInspections = (MasterInspections) o;
        return Objects.equals(getId(), masterInspections.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

