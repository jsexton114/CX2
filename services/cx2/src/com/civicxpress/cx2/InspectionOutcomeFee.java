/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.civicxpress.cx2;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * InspectionOutcomeFee generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`InspectionOutcomeFee`", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`InspectOutcomeId`", "`OrderToApply`"})})
public class InspectionOutcomeFee implements Serializable {

    private Integer id;
    private Integer inspectOutcomeId;
    private Float amount;
    private String accountCode;
    private Integer orderToApply;
    private InspectionOutcome inspectionOutcome;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`InspectOutcomeId`", nullable = true, scale = 0, precision = 10)
    public Integer getInspectOutcomeId() {
        return this.inspectOutcomeId;
    }

    public void setInspectOutcomeId(Integer inspectOutcomeId) {
        this.inspectOutcomeId = inspectOutcomeId;
    }

    @Column(name = "`Amount`", nullable = true, scale = 2, precision = 10)
    public Float getAmount() {
        return this.amount;
    }

    public void setAmount(Float amount) {
        this.amount = amount;
    }

    @Column(name = "`AccountCode`", nullable = true, length = 255)
    public String getAccountCode() {
        return this.accountCode;
    }

    public void setAccountCode(String accountCode) {
        this.accountCode = accountCode;
    }

    @Column(name = "`OrderToApply`", nullable = true, scale = 0, precision = 10)
    public Integer getOrderToApply() {
        return this.orderToApply;
    }

    public void setOrderToApply(Integer orderToApply) {
        this.orderToApply = orderToApply;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`InspectOutcomeId`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public InspectionOutcome getInspectionOutcome() {
        return this.inspectionOutcome;
    }

    public void setInspectionOutcome(InspectionOutcome inspectionOutcome) {
        if(inspectionOutcome != null) {
            this.inspectOutcomeId = inspectionOutcome.getId();
        }

        this.inspectionOutcome = inspectionOutcome;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof InspectionOutcomeFee)) return false;
        final InspectionOutcomeFee inspectionOutcomeFee = (InspectionOutcomeFee) o;
        return Objects.equals(getId(), inspectionOutcomeFee.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

