/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.civicxpress.cx2;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Gis2forms generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`GIS2Forms`", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`GISRecordId`", "`RelatedFormGUID`"})})
public class Gis2forms implements Serializable {

    private Integer id;
    private Integer gisrecordId;
    private String relatedFormGuid;
    private Integer addedBy;
    private Date addedTime;
    private Gisrecords gisrecords;
    private MasterForms masterForms;
    private Users users;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`GISRecordId`", nullable = true, scale = 0, precision = 10)
    public Integer getGisrecordId() {
        return this.gisrecordId;
    }

    public void setGisrecordId(Integer gisrecordId) {
        this.gisrecordId = gisrecordId;
    }

    @Column(name = "`RelatedFormGUID`", nullable = true, length = 255)
    public String getRelatedFormGuid() {
        return this.relatedFormGuid;
    }

    public void setRelatedFormGuid(String relatedFormGuid) {
        this.relatedFormGuid = relatedFormGuid;
    }

    @Column(name = "`AddedBy`", nullable = true, scale = 0, precision = 10)
    public Integer getAddedBy() {
        return this.addedBy;
    }

    public void setAddedBy(Integer addedBy) {
        this.addedBy = addedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`AddedTime`", nullable = true)
    public Date getAddedTime() {
        return this.addedTime;
    }

    public void setAddedTime(Date addedTime) {
        this.addedTime = addedTime;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`GISRecordId`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public Gisrecords getGisrecords() {
        return this.gisrecords;
    }

    public void setGisrecords(Gisrecords gisrecords) {
        if(gisrecords != null) {
            this.gisrecordId = gisrecords.getId();
        }

        this.gisrecords = gisrecords;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`RelatedFormGUID`", referencedColumnName = "`FormGUID`", insertable = false, updatable = false)
    public MasterForms getMasterForms() {
        return this.masterForms;
    }

    public void setMasterForms(MasterForms masterForms) {
        if(masterForms != null) {
            this.relatedFormGuid = masterForms.getFormGuid();
        }

        this.masterForms = masterForms;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`AddedBy`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public Users getUsers() {
        return this.users;
    }

    public void setUsers(Users users) {
        if(users != null) {
            this.addedBy = users.getId();
        }

        this.users = users;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Gis2forms)) return false;
        final Gis2forms gis2forms = (Gis2forms) o;
        return Objects.equals(getId(), gis2forms.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

