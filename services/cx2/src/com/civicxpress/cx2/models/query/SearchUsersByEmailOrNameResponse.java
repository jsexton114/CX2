/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.civicxpress.cx2.models.query;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Time;
import java.util.Date;
import java.util.List;
import java.util.Objects;

import com.civicxpress.cx2.FormFieldTypes;
import com.civicxpress.cx2.FormStatuses;
import com.civicxpress.cx2.FormTypes;
import com.civicxpress.cx2.Giscontacts;
import com.civicxpress.cx2.MasterForms;
import com.civicxpress.cx2.Municipalities;
import com.civicxpress.cx2.MunicipalityGroups;
import com.civicxpress.cx2.Users;
import com.civicxpress.cx2.Vendor;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.wavemaker.runtime.data.annotations.ColumnAlias;

public class SearchUsersByEmailOrNameResponse implements Serializable {

    @JsonProperty("Email")
    @ColumnAlias("Email")
    private String email;
    @JsonProperty("FullName")
    @ColumnAlias("FullName")
    private String fullName;
    @JsonProperty("ID")
    @ColumnAlias("ID")
    private BigDecimal id;
    @JsonProperty("Photo")
    @ColumnAlias("Photo")
    private byte[] photo;

    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getFullName() {
        return this.fullName;
    }

    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    public BigDecimal getId() {
        return this.id;
    }

    public void setId(BigDecimal id) {
        this.id = id;
    }

    public byte[] getPhoto() {
        return this.photo;
    }

    public void setPhoto(byte[] photo) {
        this.photo = photo;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof SearchUsersByEmailOrNameResponse)) return false;
        final SearchUsersByEmailOrNameResponse searchUsersByEmailOrNameResponse = (SearchUsersByEmailOrNameResponse) o;
        return Objects.equals(getEmail(), searchUsersByEmailOrNameResponse.getEmail()) &&
                Objects.equals(getFullName(), searchUsersByEmailOrNameResponse.getFullName()) &&
                Objects.equals(getId(), searchUsersByEmailOrNameResponse.getId()) &&
                Objects.equals(getPhoto(), searchUsersByEmailOrNameResponse.getPhoto());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getEmail(),
                getFullName(),
                getId(),
                getPhoto());
    }
}
