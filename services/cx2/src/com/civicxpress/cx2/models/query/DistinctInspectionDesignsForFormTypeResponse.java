/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.civicxpress.cx2.models.query;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.Time;
import java.util.Date;
import java.util.List;
import java.util.Objects;

import org.joda.time.LocalDateTime;

import com.civicxpress.cx2.FormFieldTypes;
import com.civicxpress.cx2.FormTypes;
import com.civicxpress.cx2.MasterForms;
import com.civicxpress.cx2.Users;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.wavemaker.runtime.data.annotations.ColumnAlias;

public class DistinctInspectionDesignsForFormTypeResponse implements Serializable {

    @ColumnAlias("inspectionDesignId")
    private Integer inspectionDesignId;
    @ColumnAlias("inspectDesignName")
    private String inspectDesignName;
    @ColumnAlias("allowSameDayInspections")
    private Boolean allowSameDayInspections;
    @ColumnAlias("maxDaysInAdvance")
    private Integer maxDaysInAdvance;
    @ColumnAlias("sequenceOrderNumber")
    private Integer sequenceOrderNumber;
    @ColumnAlias("mustCompBeforeReqNxt")
    private Boolean mustCompBeforeReqNxt;
    @ColumnAlias("sameDayInspectionFee")
    private Integer sameDayInspectionFee;

    public Integer getInspectionDesignId() {
        return this.inspectionDesignId;
    }

    public void setInspectionDesignId(Integer inspectionDesignId) {
        this.inspectionDesignId = inspectionDesignId;
    }

    public String getInspectDesignName() {
        return this.inspectDesignName;
    }

    public void setInspectDesignName(String inspectDesignName) {
        this.inspectDesignName = inspectDesignName;
    }

    public Boolean getAllowSameDayInspections() {
        return this.allowSameDayInspections;
    }

    public void setAllowSameDayInspections(Boolean allowSameDayInspections) {
        this.allowSameDayInspections = allowSameDayInspections;
    }

    public Integer getMaxDaysInAdvance() {
        return this.maxDaysInAdvance;
    }

    public void setMaxDaysInAdvance(Integer maxDaysInAdvance) {
        this.maxDaysInAdvance = maxDaysInAdvance;
    }

    public Integer getSequenceOrderNumber() {
        return this.sequenceOrderNumber;
    }

    public void setSequenceOrderNumber(Integer sequenceOrderNumber) {
        this.sequenceOrderNumber = sequenceOrderNumber;
    }

    public Boolean getMustCompBeforeReqNxt() {
        return this.mustCompBeforeReqNxt;
    }

    public void setMustCompBeforeReqNxt(Boolean mustCompBeforeReqNxt) {
        this.mustCompBeforeReqNxt = mustCompBeforeReqNxt;
    }

    public Integer getSameDayInspectionFee() {
        return this.sameDayInspectionFee;
    }

    public void setSameDayInspectionFee(Integer sameDayInspectionFee) {
        this.sameDayInspectionFee = sameDayInspectionFee;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof DistinctInspectionDesignsForFormTypeResponse)) return false;
        final DistinctInspectionDesignsForFormTypeResponse distinctInspectionDesignsForFormTypeResponse = (DistinctInspectionDesignsForFormTypeResponse) o;
        return Objects.equals(getInspectionDesignId(), distinctInspectionDesignsForFormTypeResponse.getInspectionDesignId()) &&
                Objects.equals(getInspectDesignName(), distinctInspectionDesignsForFormTypeResponse.getInspectDesignName()) &&
                Objects.equals(getAllowSameDayInspections(), distinctInspectionDesignsForFormTypeResponse.getAllowSameDayInspections()) &&
                Objects.equals(getMaxDaysInAdvance(), distinctInspectionDesignsForFormTypeResponse.getMaxDaysInAdvance()) &&
                Objects.equals(getSequenceOrderNumber(), distinctInspectionDesignsForFormTypeResponse.getSequenceOrderNumber()) &&
                Objects.equals(getMustCompBeforeReqNxt(), distinctInspectionDesignsForFormTypeResponse.getMustCompBeforeReqNxt()) &&
                Objects.equals(getSameDayInspectionFee(), distinctInspectionDesignsForFormTypeResponse.getSameDayInspectionFee());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getInspectionDesignId(),
                getInspectDesignName(),
                getAllowSameDayInspections(),
                getMaxDaysInAdvance(),
                getSequenceOrderNumber(),
                getMustCompBeforeReqNxt(),
                getSameDayInspectionFee());
    }
}
