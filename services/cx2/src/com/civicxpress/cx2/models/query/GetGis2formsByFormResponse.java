/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.civicxpress.cx2.models.query;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.Time;
import java.util.Date;
import java.util.List;
import java.util.Objects;

import org.joda.time.LocalDateTime;

import com.civicxpress.cx2.ContractorTypes;
import com.civicxpress.cx2.FormFieldTypes;
import com.civicxpress.cx2.FormTypes;
import com.civicxpress.cx2.Gisrecords;
import com.civicxpress.cx2.MasterForms;
import com.civicxpress.cx2.Municipalities;
import com.civicxpress.cx2.Projects;
import com.civicxpress.cx2.States;
import com.civicxpress.cx2.Users;
import com.civicxpress.cx2.Vendor;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.wavemaker.runtime.data.annotations.ColumnAlias;

public class GetGis2formsByFormResponse implements Serializable {

    @JsonProperty("addedBy")
    @ColumnAlias("addedBy")
    private Integer addedBy;
    @JsonProperty("addedTime")
    @ColumnAlias("addedTime")
    private Date addedTime;
    @JsonProperty("gisrecordId")
    @ColumnAlias("gisrecordId")
    private Integer gisrecordId;
    @JsonProperty("gisrecords")
    @ColumnAlias("gisrecords")
    private Gisrecords gisrecords;
    @JsonProperty("id")
    @ColumnAlias("id")
    private Integer id;
    @JsonProperty("masterForms")
    @ColumnAlias("masterForms")
    private MasterForms masterForms;
    @JsonProperty("relatedFormGuid")
    @ColumnAlias("relatedFormGuid")
    private String relatedFormGuid;
    @JsonProperty("users")
    @ColumnAlias("users")
    private Users users;

    public Integer getAddedBy() {
        return this.addedBy;
    }

    public void setAddedBy(Integer addedBy) {
        this.addedBy = addedBy;
    }

    public Date getAddedTime() {
        return this.addedTime;
    }

    public void setAddedTime(Date addedTime) {
        this.addedTime = addedTime;
    }

    public Integer getGisrecordId() {
        return this.gisrecordId;
    }

    public void setGisrecordId(Integer gisrecordId) {
        this.gisrecordId = gisrecordId;
    }

    public Gisrecords getGisrecords() {
        return this.gisrecords;
    }

    public void setGisrecords(Gisrecords gisrecords) {
        this.gisrecords = gisrecords;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public MasterForms getMasterForms() {
        return this.masterForms;
    }

    public void setMasterForms(MasterForms masterForms) {
        this.masterForms = masterForms;
    }

    public String getRelatedFormGuid() {
        return this.relatedFormGuid;
    }

    public void setRelatedFormGuid(String relatedFormGuid) {
        this.relatedFormGuid = relatedFormGuid;
    }

    public Users getUsers() {
        return this.users;
    }

    public void setUsers(Users users) {
        this.users = users;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof GetGis2formsByFormResponse)) return false;
        final GetGis2formsByFormResponse getGis2formsByFormResponse = (GetGis2formsByFormResponse) o;
        return Objects.equals(getAddedBy(), getGis2formsByFormResponse.getAddedBy()) &&
                Objects.equals(getAddedTime(), getGis2formsByFormResponse.getAddedTime()) &&
                Objects.equals(getGisrecordId(), getGis2formsByFormResponse.getGisrecordId()) &&
                Objects.equals(getGisrecords(), getGis2formsByFormResponse.getGisrecords()) &&
                Objects.equals(getId(), getGis2formsByFormResponse.getId()) &&
                Objects.equals(getMasterForms(), getGis2formsByFormResponse.getMasterForms()) &&
                Objects.equals(getRelatedFormGuid(), getGis2formsByFormResponse.getRelatedFormGuid()) &&
                Objects.equals(getUsers(), getGis2formsByFormResponse.getUsers());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getAddedBy(),
                getAddedTime(),
                getGisrecordId(),
                getGisrecords(),
                getId(),
                getMasterForms(),
                getRelatedFormGuid(),
                getUsers());
    }
}
