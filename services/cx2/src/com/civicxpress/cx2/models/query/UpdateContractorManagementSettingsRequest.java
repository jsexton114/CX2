/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.civicxpress.cx2.models.query;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Date;
import java.sql.Time;
import java.sql.Timestamp;
import java.util.List;
import java.util.Objects;

import javax.validation.constraints.NotNull;

import org.joda.time.LocalDateTime;

import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateContractorManagementSettingsRequest implements Serializable {

    @NotNull
    @JsonProperty("autoApproveContractors")
    private Boolean autoApproveContractors;
    @NotNull
    @JsonProperty("separateContractorApplicationRequired")
    private Boolean separateContractorApplicationRequired;
    @NotNull
    @JsonProperty("formId")
    private Integer formId;
    @NotNull
    @JsonProperty("municipality")
    private Integer municipality;

    public Boolean getAutoApproveContractors() {
        return this.autoApproveContractors;
    }

    public void setAutoApproveContractors(Boolean autoApproveContractors) {
        this.autoApproveContractors = autoApproveContractors;
    }

    public Boolean getSeparateContractorApplicationRequired() {
        return this.separateContractorApplicationRequired;
    }

    public void setSeparateContractorApplicationRequired(Boolean separateContractorApplicationRequired) {
        this.separateContractorApplicationRequired = separateContractorApplicationRequired;
    }

    public Integer getFormId() {
        return this.formId;
    }

    public void setFormId(Integer formId) {
        this.formId = formId;
    }

    public Integer getMunicipality() {
        return this.municipality;
    }

    public void setMunicipality(Integer municipality) {
        this.municipality = municipality;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof UpdateContractorManagementSettingsRequest)) return false;
        final UpdateContractorManagementSettingsRequest updateContractorManagementSettingsRequest = (UpdateContractorManagementSettingsRequest) o;
        return Objects.equals(getAutoApproveContractors(), updateContractorManagementSettingsRequest.getAutoApproveContractors()) &&
                Objects.equals(getSeparateContractorApplicationRequired(), updateContractorManagementSettingsRequest.getSeparateContractorApplicationRequired()) &&
                Objects.equals(getFormId(), updateContractorManagementSettingsRequest.getFormId()) &&
                Objects.equals(getMunicipality(), updateContractorManagementSettingsRequest.getMunicipality());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getAutoApproveContractors(),
                getSeparateContractorApplicationRequired(),
                getFormId(),
                getMunicipality());
    }
}
