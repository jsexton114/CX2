/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.civicxpress.cx2.models.query;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.Date;
import java.sql.Time;
import java.util.List;
import java.util.Objects;

import org.joda.time.LocalDateTime;

import com.civicxpress.cx2.ContractorTypes;
import com.civicxpress.cx2.FormFieldTypes;
import com.civicxpress.cx2.FormTypes;
import com.civicxpress.cx2.Gisrecords;
import com.civicxpress.cx2.MasterForms;
import com.civicxpress.cx2.Municipalities;
import com.civicxpress.cx2.Projects;
import com.civicxpress.cx2.States;
import com.civicxpress.cx2.Users;
import com.civicxpress.cx2.Vendor;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.wavemaker.runtime.data.annotations.ColumnAlias;

public class AllmunicipalityInspectionsResponse implements Serializable {

    @ColumnAlias("inspectionGuid")
    private String inspectionGuid;
    @ColumnAlias("assignedTo")
    private Integer assignedTo;
    @ColumnAlias("dateAssigned")
    private LocalDateTime dateAssigned;
    @ColumnAlias("assignedToPersonName")
    private String assignedToPersonName;
    @ColumnAlias("outcome")
    private String outcome;
    @ColumnAlias("inspectionTitle")
    private String inspectionTitle;
    @ColumnAlias("inspectionZone")
    private String inspectionZone;
    @ColumnAlias("requestedFor")
    private LocalDateTime requestedFor;
    @ColumnAlias("fullAddress")
    private String fullAddress;
    @ColumnAlias("lot")
    private String lot;
    @ColumnAlias("subdivision")
    private String subdivision;
    @ColumnAlias("requestedByFullName")
    private String requestedByFullName;
    @ColumnAlias("inspectDesignName")
    private String inspectDesignName;
    @ColumnAlias("dateCreated")
    private LocalDateTime dateCreated;

    public String getInspectionGuid() {
        return this.inspectionGuid;
    }

    public void setInspectionGuid(String inspectionGuid) {
        this.inspectionGuid = inspectionGuid;
    }

    public Integer getAssignedTo() {
        return this.assignedTo;
    }

    public void setAssignedTo(Integer assignedTo) {
        this.assignedTo = assignedTo;
    }

    public LocalDateTime getDateAssigned() {
        return this.dateAssigned;
    }

    public void setDateAssigned(LocalDateTime dateAssigned) {
        this.dateAssigned = dateAssigned;
    }

    public String getAssignedToPersonName() {
        return this.assignedToPersonName;
    }

    public void setAssignedToPersonName(String assignedToPersonName) {
        this.assignedToPersonName = assignedToPersonName;
    }

    public String getOutcome() {
        return this.outcome;
    }

    public void setOutcome(String outcome) {
        this.outcome = outcome;
    }

    public String getInspectionTitle() {
        return this.inspectionTitle;
    }

    public void setInspectionTitle(String inspectionTitle) {
        this.inspectionTitle = inspectionTitle;
    }

    public String getInspectionZone() {
        return this.inspectionZone;
    }

    public void setInspectionZone(String inspectionZone) {
        this.inspectionZone = inspectionZone;
    }

    public LocalDateTime getRequestedFor() {
        return this.requestedFor;
    }

    public void setRequestedFor(LocalDateTime requestedFor) {
        this.requestedFor = requestedFor;
    }

    public String getFullAddress() {
        return this.fullAddress;
    }

    public void setFullAddress(String fullAddress) {
        this.fullAddress = fullAddress;
    }

    public String getLot() {
        return this.lot;
    }

    public void setLot(String lot) {
        this.lot = lot;
    }

    public String getSubdivision() {
        return this.subdivision;
    }

    public void setSubdivision(String subdivision) {
        this.subdivision = subdivision;
    }

    public String getRequestedByFullName() {
        return this.requestedByFullName;
    }

    public void setRequestedByFullName(String requestedByFullName) {
        this.requestedByFullName = requestedByFullName;
    }

    public String getInspectDesignName() {
        return this.inspectDesignName;
    }

    public void setInspectDesignName(String inspectDesignName) {
        this.inspectDesignName = inspectDesignName;
    }

    public LocalDateTime getDateCreated() {
        return this.dateCreated;
    }

    public void setDateCreated(LocalDateTime dateCreated) {
        this.dateCreated = dateCreated;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof AllmunicipalityInspectionsResponse)) return false;
        final AllmunicipalityInspectionsResponse allmunicipalityInspectionsResponse = (AllmunicipalityInspectionsResponse) o;
        return Objects.equals(getInspectionGuid(), allmunicipalityInspectionsResponse.getInspectionGuid()) &&
                Objects.equals(getAssignedTo(), allmunicipalityInspectionsResponse.getAssignedTo()) &&
                Objects.equals(getDateAssigned(), allmunicipalityInspectionsResponse.getDateAssigned()) &&
                Objects.equals(getAssignedToPersonName(), allmunicipalityInspectionsResponse.getAssignedToPersonName()) &&
                Objects.equals(getOutcome(), allmunicipalityInspectionsResponse.getOutcome()) &&
                Objects.equals(getInspectionTitle(), allmunicipalityInspectionsResponse.getInspectionTitle()) &&
                Objects.equals(getInspectionZone(), allmunicipalityInspectionsResponse.getInspectionZone()) &&
                Objects.equals(getRequestedFor(), allmunicipalityInspectionsResponse.getRequestedFor()) &&
                Objects.equals(getFullAddress(), allmunicipalityInspectionsResponse.getFullAddress()) &&
                Objects.equals(getLot(), allmunicipalityInspectionsResponse.getLot()) &&
                Objects.equals(getSubdivision(), allmunicipalityInspectionsResponse.getSubdivision()) &&
                Objects.equals(getRequestedByFullName(), allmunicipalityInspectionsResponse.getRequestedByFullName()) &&
                Objects.equals(getInspectDesignName(), allmunicipalityInspectionsResponse.getInspectDesignName()) &&
                Objects.equals(getDateCreated(), allmunicipalityInspectionsResponse.getDateCreated());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getInspectionGuid(),
                getAssignedTo(),
                getDateAssigned(),
                getAssignedToPersonName(),
                getOutcome(),
                getInspectionTitle(),
                getInspectionZone(),
                getRequestedFor(),
                getFullAddress(),
                getLot(),
                getSubdivision(),
                getRequestedByFullName(),
                getInspectDesignName(),
                getDateCreated());
    }
}
