/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.civicxpress.cx2.models.query;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.Date;
import java.sql.Time;
import java.util.List;
import java.util.Objects;

import org.joda.time.LocalDateTime;

import com.civicxpress.cx2.ContractorTypes;
import com.civicxpress.cx2.Gisrecords;
import com.civicxpress.cx2.MasterForms;
import com.civicxpress.cx2.Projects;
import com.civicxpress.cx2.States;
import com.civicxpress.cx2.Users;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.wavemaker.runtime.data.annotations.ColumnAlias;

public class SearchGisByFullAddressResponse implements Serializable {

    @ColumnAlias("ID")
    private Integer id;
    @ColumnAlias("subdivisionName")
    private String subdivisionName;
    @ColumnAlias("Parcel")
    private String parcel;
    @ColumnAlias("Lot")
    private String lot;
    @ColumnAlias("Section")
    private String section;
    @ColumnAlias("StreetNumber")
    private String streetNumber;
    @ColumnAlias("StreetName")
    private String streetName;
    @ColumnAlias("City")
    private String city;
    @ColumnAlias("StateName")
    private String stateName;
    @ColumnAlias("InspectionZone")
    private String inspectionZone;
    @ColumnAlias("FullAddress")
    private String fullAddress;

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getSubdivisionName() {
        return this.subdivisionName;
    }

    public void setSubdivisionName(String subdivisionName) {
        this.subdivisionName = subdivisionName;
    }

    public String getParcel() {
        return this.parcel;
    }

    public void setParcel(String parcel) {
        this.parcel = parcel;
    }

    public String getLot() {
        return this.lot;
    }

    public void setLot(String lot) {
        this.lot = lot;
    }

    public String getSection() {
        return this.section;
    }

    public void setSection(String section) {
        this.section = section;
    }

    public String getStreetNumber() {
        return this.streetNumber;
    }

    public void setStreetNumber(String streetNumber) {
        this.streetNumber = streetNumber;
    }

    public String getStreetName() {
        return this.streetName;
    }

    public void setStreetName(String streetName) {
        this.streetName = streetName;
    }

    public String getCity() {
        return this.city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public String getStateName() {
        return this.stateName;
    }

    public void setStateName(String stateName) {
        this.stateName = stateName;
    }

    public String getInspectionZone() {
        return this.inspectionZone;
    }

    public void setInspectionZone(String inspectionZone) {
        this.inspectionZone = inspectionZone;
    }

    public String getFullAddress() {
        return this.fullAddress;
    }

    public void setFullAddress(String fullAddress) {
        this.fullAddress = fullAddress;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof SearchGisByFullAddressResponse)) return false;
        final SearchGisByFullAddressResponse searchGisByFullAddressResponse = (SearchGisByFullAddressResponse) o;
        return Objects.equals(getId(), searchGisByFullAddressResponse.getId()) &&
                Objects.equals(getSubdivisionName(), searchGisByFullAddressResponse.getSubdivisionName()) &&
                Objects.equals(getParcel(), searchGisByFullAddressResponse.getParcel()) &&
                Objects.equals(getLot(), searchGisByFullAddressResponse.getLot()) &&
                Objects.equals(getSection(), searchGisByFullAddressResponse.getSection()) &&
                Objects.equals(getStreetNumber(), searchGisByFullAddressResponse.getStreetNumber()) &&
                Objects.equals(getStreetName(), searchGisByFullAddressResponse.getStreetName()) &&
                Objects.equals(getCity(), searchGisByFullAddressResponse.getCity()) &&
                Objects.equals(getStateName(), searchGisByFullAddressResponse.getStateName()) &&
                Objects.equals(getInspectionZone(), searchGisByFullAddressResponse.getInspectionZone()) &&
                Objects.equals(getFullAddress(), searchGisByFullAddressResponse.getFullAddress());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId(),
                getSubdivisionName(),
                getParcel(),
                getLot(),
                getSection(),
                getStreetNumber(),
                getStreetName(),
                getCity(),
                getStateName(),
                getInspectionZone(),
                getFullAddress());
    }
}
