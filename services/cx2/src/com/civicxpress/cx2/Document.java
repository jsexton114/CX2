/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.civicxpress.cx2;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigInteger;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

/**
 * Document generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`Document`")
@IdClass(DocumentId.class)
public class Document implements Serializable {

    private BigInteger id;
    private String itemGuid;
    private String filename;
    private String mimetype;
    @JsonProperty(access = Access.READ_ONLY)
    private byte[] contents;

    @Id
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 18)
    public BigInteger getId() {
        return this.id;
    }

    public void setId(BigInteger id) {
        this.id = id;
    }

    @Id
    @Column(name = "`ItemGUID`", nullable = true, length = 255)
    public String getItemGuid() {
        return this.itemGuid;
    }

    public void setItemGuid(String itemGuid) {
        this.itemGuid = itemGuid;
    }

    @Id
    @Column(name = "`Filename`", nullable = false, length = 255)
    public String getFilename() {
        return this.filename;
    }

    public void setFilename(String filename) {
        this.filename = filename;
    }

    @Id
    @Column(name = "`Mimetype`", nullable = false, length = 255)
    public String getMimetype() {
        return this.mimetype;
    }

    public void setMimetype(String mimetype) {
        this.mimetype = mimetype;
    }

    @Id
    @Column(name = "`Contents`", nullable = false)
    public byte[] getContents() {
        return this.contents;
    }

    public void setContents(byte[] contents) {
        this.contents = contents;
    }



    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Document)) return false;
        final Document document = (Document) o;
        return Objects.equals(getId(), document.getId()) &&
                Objects.equals(getItemGuid(), document.getItemGuid()) &&
                Objects.equals(getFilename(), document.getFilename()) &&
                Objects.equals(getMimetype(), document.getMimetype()) &&
                Objects.equals(getContents(), document.getContents());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId(),
                getItemGuid(),
                getFilename(),
                getMimetype(),
                getContents());
    }
}

