/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.civicxpress.cx2;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;

import com.wavemaker.runtime.data.annotations.ServerDefinedProperty;
import com.wavemaker.runtime.data.replacers.Scope;
import com.wavemaker.runtime.data.replacers.providers.VariableType;

/**
 * UserDeviceDetails generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`UserDeviceDetails`")
public class UserDeviceDetails implements Serializable {

    private Integer id;
    private Integer userId;
    @ServerDefinedProperty( value = VariableType.DATE_TIME, scopes = { Scope.UPDATE, Scope.INSERT })
    @Type(type = "DateTime")
    private LocalDateTime lastLogin;
    private String deviceUuid;
    private String deviceLatitude;
    private String deviceLongitude;
    @ServerDefinedProperty( value = VariableType.DATE_TIME, scopes = { Scope.UPDATE, Scope.INSERT })
    @Type(type = "DateTime")
    private LocalDateTime devicelastContactTime;
    private Users users;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`UserId`", nullable = true, scale = 0, precision = 10)
    public Integer getUserId() {
        return this.userId;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    @Column(name = "`LastLogin`", nullable = false)
    public LocalDateTime getLastLogin() {
        return this.lastLogin;
    }

    public void setLastLogin(LocalDateTime lastLogin) {
        this.lastLogin = lastLogin;
    }

    @Column(name = "`DeviceUUID`", nullable = true, length = 255)
    public String getDeviceUuid() {
        return this.deviceUuid;
    }

    public void setDeviceUuid(String deviceUuid) {
        this.deviceUuid = deviceUuid;
    }

    @Column(name = "`DeviceLatitude`", nullable = true, length = 255)
    public String getDeviceLatitude() {
        return this.deviceLatitude;
    }

    public void setDeviceLatitude(String deviceLatitude) {
        this.deviceLatitude = deviceLatitude;
    }

    @Column(name = "`DeviceLongitude`", nullable = true, length = 255)
    public String getDeviceLongitude() {
        return this.deviceLongitude;
    }

    public void setDeviceLongitude(String deviceLongitude) {
        this.deviceLongitude = deviceLongitude;
    }

    @Column(name = "`DevicelastContactTime`", nullable = true)
    public LocalDateTime getDevicelastContactTime() {
        return this.devicelastContactTime;
    }

    public void setDevicelastContactTime(LocalDateTime devicelastContactTime) {
        this.devicelastContactTime = devicelastContactTime;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`UserId`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public Users getUsers() {
        return this.users;
    }

    public void setUsers(Users users) {
        if(users != null) {
            this.userId = users.getId();
        }

        this.users = users;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof UserDeviceDetails)) return false;
        final UserDeviceDetails userDeviceDetails = (UserDeviceDetails) o;
        return Objects.equals(getId(), userDeviceDetails.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

