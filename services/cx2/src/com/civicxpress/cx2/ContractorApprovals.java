/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.civicxpress.cx2;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ContractorApprovals generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`ContractorApprovals`")
public class ContractorApprovals implements Serializable {

    private Integer id;
    private Integer municipalityId;
    private Integer contractorId;
    private Date dateApproved;
    private String approvedBy;
    private Date expiresDate;
    private Boolean active;
    private Contractors contractors;
    private Municipalities municipalities;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`MunicipalityId`", nullable = true, scale = 0, precision = 10)
    public Integer getMunicipalityId() {
        return this.municipalityId;
    }

    public void setMunicipalityId(Integer municipalityId) {
        this.municipalityId = municipalityId;
    }

    @Column(name = "`ContractorId`", nullable = true, scale = 0, precision = 10)
    public Integer getContractorId() {
        return this.contractorId;
    }

    public void setContractorId(Integer contractorId) {
        this.contractorId = contractorId;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`DateApproved`", nullable = true)
    public Date getDateApproved() {
        return this.dateApproved;
    }

    public void setDateApproved(Date dateApproved) {
        this.dateApproved = dateApproved;
    }

    @Column(name = "`ApprovedBy`", nullable = true, length = 255)
    public String getApprovedBy() {
        return this.approvedBy;
    }

    public void setApprovedBy(String approvedBy) {
        this.approvedBy = approvedBy;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`ExpiresDate`", nullable = true)
    public Date getExpiresDate() {
        return this.expiresDate;
    }

    public void setExpiresDate(Date expiresDate) {
        this.expiresDate = expiresDate;
    }

    @Column(name = "`Active`", nullable = true)
    public Boolean getActive() {
        return this.active;
    }

    public void setActive(Boolean active) {
        this.active = active;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`ContractorId`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public Contractors getContractors() {
        return this.contractors;
    }

    public void setContractors(Contractors contractors) {
        if(contractors != null) {
            this.contractorId = contractors.getId();
        }

        this.contractors = contractors;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`MunicipalityId`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public Municipalities getMunicipalities() {
        return this.municipalities;
    }

    public void setMunicipalities(Municipalities municipalities) {
        if(municipalities != null) {
            this.municipalityId = municipalities.getId();
        }

        this.municipalities = municipalities;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof ContractorApprovals)) return false;
        final ContractorApprovals contractorApprovals = (ContractorApprovals) o;
        return Objects.equals(getId(), contractorApprovals.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

