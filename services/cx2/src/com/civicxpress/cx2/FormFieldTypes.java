/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.civicxpress.cx2;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * FormFieldTypes generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`FormFieldTypes`")
public class FormFieldTypes implements Serializable {

    private Integer id;
    private String label;
    private String sqlType;
    private List<FormTypeFields> formTypeFieldses = new ArrayList<>();

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`Label`", nullable = true, length = 255)
    public String getLabel() {
        return this.label;
    }

    public void setLabel(String label) {
        this.label = label;
    }

    @Column(name = "`SqlType`", nullable = true, length = 255)
    public String getSqlType() {
        return this.sqlType;
    }

    public void setSqlType(String sqlType) {
        this.sqlType = sqlType;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "formFieldTypes")
    public List<FormTypeFields> getFormTypeFieldses() {
        return this.formTypeFieldses;
    }

    public void setFormTypeFieldses(List<FormTypeFields> formTypeFieldses) {
        this.formTypeFieldses = formTypeFieldses;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof FormFieldTypes)) return false;
        final FormFieldTypes formFieldTypes = (FormFieldTypes) o;
        return Objects.equals(getId(), formFieldTypes.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

