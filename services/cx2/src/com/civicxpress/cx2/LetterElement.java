/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.civicxpress.cx2;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.Table;

/**
 * LetterElement generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`LetterElement`")
@IdClass(LetterElementId.class)
public class LetterElement implements Serializable {

    private Integer id;
    private Integer letterSectionId;
    private Integer fontSize;
    private Integer lineHeight;
    private String justification;
    private Boolean isBold;
    private String text;

    @Id
    @Column(name = "`Id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Id
    @Column(name = "`LetterSectionId`", nullable = false, scale = 0, precision = 10)
    public Integer getLetterSectionId() {
        return this.letterSectionId;
    }

    public void setLetterSectionId(Integer letterSectionId) {
        this.letterSectionId = letterSectionId;
    }

    @Id
    @Column(name = "`FontSize`", nullable = false, scale = 0, precision = 10)
    public Integer getFontSize() {
        return this.fontSize;
    }

    public void setFontSize(Integer fontSize) {
        this.fontSize = fontSize;
    }

    @Id
    @Column(name = "`LineHeight`", nullable = false, scale = 0, precision = 10)
    public Integer getLineHeight() {
        return this.lineHeight;
    }

    public void setLineHeight(Integer lineHeight) {
        this.lineHeight = lineHeight;
    }

    @Id
    @Column(name = "`Justification`", nullable = false, length = 10)
    public String getJustification() {
        return this.justification;
    }

    public void setJustification(String justification) {
        this.justification = justification;
    }

    @Id
    @Column(name = "`IsBold`", nullable = false)
    public Boolean getIsBold() {
        return this.isBold;
    }

    public void setIsBold(Boolean isBold) {
        this.isBold = isBold;
    }

    @Id
    @Column(name = "`Text`", nullable = true, length = 1000)
    public String getText() {
        return this.text;
    }

    public void setText(String text) {
        this.text = text;
    }



    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof LetterElement)) return false;
        final LetterElement letterElement = (LetterElement) o;
        return Objects.equals(getId(), letterElement.getId()) &&
                Objects.equals(getLetterSectionId(), letterElement.getLetterSectionId()) &&
                Objects.equals(getFontSize(), letterElement.getFontSize()) &&
                Objects.equals(getLineHeight(), letterElement.getLineHeight()) &&
                Objects.equals(getJustification(), letterElement.getJustification()) &&
                Objects.equals(getIsBold(), letterElement.getIsBold()) &&
                Objects.equals(getText(), letterElement.getText());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId(),
                getLetterSectionId(),
                getFontSize(),
                getLineHeight(),
                getJustification(),
                getIsBold(),
                getText());
    }
}

