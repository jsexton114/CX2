/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.civicxpress.cx2;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

/**
 * Municipalities generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`Municipalities`")
public class Municipalities implements Serializable {

    private Integer id;
    private String municipalityGuid;
    private String municipalityName;
    private String address1;
    private String address2;
    private String city;
    private String state;
    private String postalCode;
    private String phone;
    private String email;
    private Boolean allowManualPayment;
    private Integer manualPaymentPercent;
    private Boolean active;
    private String globalEmailSig;
    @JsonProperty(access = Access.READ_ONLY)
    private byte[] logo;
    private List<Roles> roleses = new ArrayList<>();
    private List<ManualFeeTypes> manualFeeTypeses = new ArrayList<>();
    private List<FormTypes> formTypeses = new ArrayList<>();
    private List<Gisrecords> gisrecordses = new ArrayList<>();
    private List<UserSubscriptions> userSubscriptionses = new ArrayList<>();
    private List<Subdivisions> subdivisionses = new ArrayList<>();

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`MunicipalityGuid`", nullable = true, length = 255)
    public String getMunicipalityGuid() {
        return this.municipalityGuid;
    }

    public void setMunicipalityGuid(String municipalityGuid) {
        this.municipalityGuid = municipalityGuid;
    }

    @Column(name = "`MunicipalityName`", nullable = true, length = 255)
    public String getMunicipalityName() {
        return this.municipalityName;
    }

    public void setMunicipalityName(String municipalityName) {
        this.municipalityName = municipalityName;
    }

    @Column(name = "`Address1`", nullable = true, length = 255)
    public String getAddress1() {
        return this.address1;
    }

    public void setAddress1(String address1) {
        this.address1 = address1;
    }

    @Column(name = "`Address2`", nullable = true, length = 255)
    public String getAddress2() {
        return this.address2;
    }

    public void setAddress2(String address2) {
        this.address2 = address2;
    }

    @Column(name = "`City`", nullable = true, length = 255)
    public String getCity() {
        return this.city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    @Column(name = "`State`", nullable = true, length = 255)
    public String getState() {
        return this.state;
    }

    public void setState(String state) {
        this.state = state;
    }

    @Column(name = "`PostalCode`", nullable = true, length = 255)
    public String getPostalCode() {
        return this.postalCode;
    }

    public void setPostalCode(String postalCode) {
        this.postalCode = postalCode;
    }

    @Column(name = "`Phone`", nullable = true, length = 255)
    public String getPhone() {
        return this.phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    @Column(name = "`Email`", nullable = true, length = 255)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "`AllowManualPayment`", nullable = true)
    public Boolean getAllowManualPayment() {
        return this.allowManualPayment;
    }

    public void setAllowManualPayment(Boolean allowManualPayment) {
        this.allowManualPayment = allowManualPayment;
    }

    @Column(name = "`ManualPaymentPercent`", nullable = true, scale = 0, precision = 10)
    public Integer getManualPaymentPercent() {
        return this.manualPaymentPercent;
    }

    public void setManualPaymentPercent(Integer manualPaymentPercent) {
        this.manualPaymentPercent = manualPaymentPercent;
    }

    @Column(name = "`Active`", nullable = true)
    public Boolean getActive() {
        return this.active;
    }

    public void setActive(Boolean active) {
        this.active = active;
    }

    @Column(name = "`GlobalEmailSig`", nullable = true, length = 255)
    public String getGlobalEmailSig() {
        return this.globalEmailSig;
    }

    public void setGlobalEmailSig(String globalEmailSig) {
        this.globalEmailSig = globalEmailSig;
    }

    @Column(name = "`Logo`", nullable = true)
    public byte[] getLogo() {
        return this.logo;
    }

    public void setLogo(byte[] logo) {
        this.logo = logo;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "municipalities")
    public List<Roles> getRoleses() {
        return this.roleses;
    }

    public void setRoleses(List<Roles> roleses) {
        this.roleses = roleses;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "municipalities")
    public List<ManualFeeTypes> getManualFeeTypeses() {
        return this.manualFeeTypeses;
    }

    public void setManualFeeTypeses(List<ManualFeeTypes> manualFeeTypeses) {
        this.manualFeeTypeses = manualFeeTypeses;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "municipalities")
    public List<FormTypes> getFormTypeses() {
        return this.formTypeses;
    }

    public void setFormTypeses(List<FormTypes> formTypeses) {
        this.formTypeses = formTypeses;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "municipalities")
    public List<Gisrecords> getGisrecordses() {
        return this.gisrecordses;
    }

    public void setGisrecordses(List<Gisrecords> gisrecordses) {
        this.gisrecordses = gisrecordses;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "municipalities")
    public List<UserSubscriptions> getUserSubscriptionses() {
        return this.userSubscriptionses;
    }

    public void setUserSubscriptionses(List<UserSubscriptions> userSubscriptionses) {
        this.userSubscriptionses = userSubscriptionses;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "municipalities")
    public List<Subdivisions> getSubdivisionses() {
        return this.subdivisionses;
    }

    public void setSubdivisionses(List<Subdivisions> subdivisionses) {
        this.subdivisionses = subdivisionses;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Municipalities)) return false;
        final Municipalities municipalities = (Municipalities) o;
        return Objects.equals(getId(), municipalities.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

