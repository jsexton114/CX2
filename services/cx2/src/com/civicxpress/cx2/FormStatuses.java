/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.civicxpress.cx2;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * FormStatuses generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`FormStatuses`", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`SortOrder`", "`FormTypeId`"})})
public class FormStatuses implements Serializable {

    private Integer id;
    private Integer formTypeId;
    private String emailTextBody;
    private String emailSubjectLine;
    private Boolean allowSharedWithEdits;
    private Boolean allowAuthorEdits;
    private Boolean allowPayment;
    private Boolean allowReporting;
    private Boolean allowInspections;
    private Boolean considerClosed;
    private Boolean recalculateAutoFees;
    private Boolean createAsRecord;
    private Long sortOrder;
    private String status;
    private String description;
    private String report;
    private Integer processOwners;
    private Boolean sendEmail;
    private Boolean allowAttachments;
    private Integer writeAccess;
    private boolean publicRead;
    private boolean advanceOnZero;
    private Integer statusToBeOnForAdvanceOnZero;
    private MunicipalityGroups municipalityGroupsByWriteAccess;
    private FormTypes formTypes;
    private MunicipalityGroups municipalityGroupsByProcessOwners;
    private List<FormHistory> formHistoriesForOldStatusId;
    private List<FormHistory> formHistoriesForNewStatusId;
    private List<LetterTemplateToFormStatus> letterTemplateToFormStatuses;
    private List<MasterForms> masterFormses;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`FormTypeId`", nullable = true, scale = 0, precision = 10)
    public Integer getFormTypeId() {
        return this.formTypeId;
    }

    public void setFormTypeId(Integer formTypeId) {
        this.formTypeId = formTypeId;
    }

    @Column(name = "`EmailTextBody`", nullable = true, length = 4000)
    public String getEmailTextBody() {
        return this.emailTextBody;
    }

    public void setEmailTextBody(String emailTextBody) {
        this.emailTextBody = emailTextBody;
    }

    @Column(name = "`EmailSubjectLine`", nullable = true, length = 255)
    public String getEmailSubjectLine() {
        return this.emailSubjectLine;
    }

    public void setEmailSubjectLine(String emailSubjectLine) {
        this.emailSubjectLine = emailSubjectLine;
    }

    @Column(name = "`AllowSharedWithEdits`", nullable = true)
    public Boolean getAllowSharedWithEdits() {
        return this.allowSharedWithEdits;
    }

    public void setAllowSharedWithEdits(Boolean allowSharedWithEdits) {
        this.allowSharedWithEdits = allowSharedWithEdits;
    }

    @Column(name = "`AllowAuthorEdits`", nullable = true)
    public Boolean getAllowAuthorEdits() {
        return this.allowAuthorEdits;
    }

    public void setAllowAuthorEdits(Boolean allowAuthorEdits) {
        this.allowAuthorEdits = allowAuthorEdits;
    }

    @Column(name = "`AllowPayment`", nullable = true)
    public Boolean getAllowPayment() {
        return this.allowPayment;
    }

    public void setAllowPayment(Boolean allowPayment) {
        this.allowPayment = allowPayment;
    }

    @Column(name = "`AllowReporting`", nullable = true)
    public Boolean getAllowReporting() {
        return this.allowReporting;
    }

    public void setAllowReporting(Boolean allowReporting) {
        this.allowReporting = allowReporting;
    }

    @Column(name = "`AllowInspections`", nullable = true)
    public Boolean getAllowInspections() {
        return this.allowInspections;
    }

    public void setAllowInspections(Boolean allowInspections) {
        this.allowInspections = allowInspections;
    }

    @Column(name = "`ConsiderClosed`", nullable = true)
    public Boolean getConsiderClosed() {
        return this.considerClosed;
    }

    public void setConsiderClosed(Boolean considerClosed) {
        this.considerClosed = considerClosed;
    }

    @Column(name = "`RecalculateAutoFees`", nullable = true)
    public Boolean getRecalculateAutoFees() {
        return this.recalculateAutoFees;
    }

    public void setRecalculateAutoFees(Boolean recalculateAutoFees) {
        this.recalculateAutoFees = recalculateAutoFees;
    }

    @Column(name = "`CreateAsRecord`", nullable = true)
    public Boolean getCreateAsRecord() {
        return this.createAsRecord;
    }

    public void setCreateAsRecord(Boolean createAsRecord) {
        this.createAsRecord = createAsRecord;
    }

    @Column(name = "`SortOrder`", nullable = true, scale = 0, precision = 19)
    public Long getSortOrder() {
        return this.sortOrder;
    }

    public void setSortOrder(Long sortOrder) {
        this.sortOrder = sortOrder;
    }

    @Column(name = "`Status`", nullable = true, length = 255)
    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @Column(name = "`Description`", nullable = true, length = 500)
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name = "`Report`", nullable = true, length = 255)
    public String getReport() {
        return this.report;
    }

    public void setReport(String report) {
        this.report = report;
    }

    @Column(name = "`ProcessOwners`", nullable = true, scale = 0, precision = 10)
    public Integer getProcessOwners() {
        return this.processOwners;
    }

    public void setProcessOwners(Integer processOwners) {
        this.processOwners = processOwners;
    }

    @Column(name = "`SendEmail`", nullable = true)
    public Boolean getSendEmail() {
        return this.sendEmail;
    }

    public void setSendEmail(Boolean sendEmail) {
        this.sendEmail = sendEmail;
    }

    @Column(name = "`AllowAttachments`", nullable = true)
    public Boolean getAllowAttachments() {
        return this.allowAttachments;
    }

    public void setAllowAttachments(Boolean allowAttachments) {
        this.allowAttachments = allowAttachments;
    }

    @Column(name = "`WriteAccess`", nullable = true, scale = 0, precision = 10)
    public Integer getWriteAccess() {
        return this.writeAccess;
    }

    public void setWriteAccess(Integer writeAccess) {
        this.writeAccess = writeAccess;
    }

    @Column(name = "`PublicRead`", nullable = false)
    public boolean isPublicRead() {
        return this.publicRead;
    }

    public void setPublicRead(boolean publicRead) {
        this.publicRead = publicRead;
    }

    @Column(name = "`AdvanceOnZero`", nullable = false)
    public boolean isAdvanceOnZero() {
        return this.advanceOnZero;
    }

    public void setAdvanceOnZero(boolean advanceOnZero) {
        this.advanceOnZero = advanceOnZero;
    }

    @Column(name = "`StatusToBeOnForAdvanceOnZero`", nullable = true, scale = 0, precision = 10)
    public Integer getStatusToBeOnForAdvanceOnZero() {
        return this.statusToBeOnForAdvanceOnZero;
    }

    public void setStatusToBeOnForAdvanceOnZero(Integer statusToBeOnForAdvanceOnZero) {
        this.statusToBeOnForAdvanceOnZero = statusToBeOnForAdvanceOnZero;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`WriteAccess`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public MunicipalityGroups getMunicipalityGroupsByWriteAccess() {
        return this.municipalityGroupsByWriteAccess;
    }

    public void setMunicipalityGroupsByWriteAccess(MunicipalityGroups municipalityGroupsByWriteAccess) {
        if(municipalityGroupsByWriteAccess != null) {
            this.writeAccess = municipalityGroupsByWriteAccess.getId();
        }

        this.municipalityGroupsByWriteAccess = municipalityGroupsByWriteAccess;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`FormTypeId`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public FormTypes getFormTypes() {
        return this.formTypes;
    }

    public void setFormTypes(FormTypes formTypes) {
        if(formTypes != null) {
            this.formTypeId = formTypes.getId();
        }

        this.formTypes = formTypes;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`ProcessOwners`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public MunicipalityGroups getMunicipalityGroupsByProcessOwners() {
        return this.municipalityGroupsByProcessOwners;
    }

    public void setMunicipalityGroupsByProcessOwners(MunicipalityGroups municipalityGroupsByProcessOwners) {
        if(municipalityGroupsByProcessOwners != null) {
            this.processOwners = municipalityGroupsByProcessOwners.getId();
        }

        this.municipalityGroupsByProcessOwners = municipalityGroupsByProcessOwners;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "formStatusesByOldStatusId")
    public List<FormHistory> getFormHistoriesForOldStatusId() {
        return this.formHistoriesForOldStatusId;
    }

    public void setFormHistoriesForOldStatusId(List<FormHistory> formHistoriesForOldStatusId) {
        this.formHistoriesForOldStatusId = formHistoriesForOldStatusId;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "formStatusesByNewStatusId")
    public List<FormHistory> getFormHistoriesForNewStatusId() {
        return this.formHistoriesForNewStatusId;
    }

    public void setFormHistoriesForNewStatusId(List<FormHistory> formHistoriesForNewStatusId) {
        this.formHistoriesForNewStatusId = formHistoriesForNewStatusId;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "formStatuses")
    public List<LetterTemplateToFormStatus> getLetterTemplateToFormStatuses() {
        return this.letterTemplateToFormStatuses;
    }

    public void setLetterTemplateToFormStatuses(List<LetterTemplateToFormStatus> letterTemplateToFormStatuses) {
        this.letterTemplateToFormStatuses = letterTemplateToFormStatuses;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "formStatuses")
    public List<MasterForms> getMasterFormses() {
        return this.masterFormses;
    }

    public void setMasterFormses(List<MasterForms> masterFormses) {
        this.masterFormses = masterFormses;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof FormStatuses)) return false;
        final FormStatuses formStatuses = (FormStatuses) o;
        return Objects.equals(getId(), formStatuses.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

