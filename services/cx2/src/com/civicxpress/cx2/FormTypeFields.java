/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.civicxpress.cx2;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * FormTypeFields generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`FormTypeFields`")
public class FormTypeFields implements Serializable {

    private Integer id;
    private Integer formTypeId;
    private String fieldName;
    private String label;
    private Integer displayOrder;
    private boolean required;
    private String defaultValue;
    private String helpText;
    private String possibleValues;
    private int fieldTypeId;
    private String automaticFeeType;
    private FormFieldTypes formFieldTypes;
    private FormTypes formTypes;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`FormTypeId`", nullable = true, scale = 0, precision = 10)
    public Integer getFormTypeId() {
        return this.formTypeId;
    }

    public void setFormTypeId(Integer formTypeId) {
        this.formTypeId = formTypeId;
    }

    @Column(name = "`FieldName`", nullable = true, length = 255)
    public String getFieldName() {
        return this.fieldName;
    }

    public void setFieldName(String fieldName) {
        this.fieldName = fieldName;
    }

    @Column(name = "`Label`", nullable = true, length = 255)
    public String getLabel() {
        return this.label;
    }

    public void setLabel(String label) {
        this.label = label;
    }

    @Column(name = "`DisplayOrder`", nullable = true, scale = 0, precision = 10)
    public Integer getDisplayOrder() {
        return this.displayOrder;
    }

    public void setDisplayOrder(Integer displayOrder) {
        this.displayOrder = displayOrder;
    }

    @Column(name = "`Required`", nullable = false)
    public boolean isRequired() {
        return this.required;
    }

    public void setRequired(boolean required) {
        this.required = required;
    }

    @Column(name = "`DefaultValue`", nullable = true, length = 2147483647)
    public String getDefaultValue() {
        return this.defaultValue;
    }

    public void setDefaultValue(String defaultValue) {
        this.defaultValue = defaultValue;
    }

    @Column(name = "`HelpText`", nullable = true, length = 4000)
    public String getHelpText() {
        return this.helpText;
    }

    public void setHelpText(String helpText) {
        this.helpText = helpText;
    }

    @Column(name = "`PossibleValues`", nullable = true, length = 2147483647)
    public String getPossibleValues() {
        return this.possibleValues;
    }

    public void setPossibleValues(String possibleValues) {
        this.possibleValues = possibleValues;
    }

    @Column(name = "`FieldTypeId`", nullable = false, scale = 0, precision = 10)
    public int getFieldTypeId() {
        return this.fieldTypeId;
    }

    public void setFieldTypeId(int fieldTypeId) {
        this.fieldTypeId = fieldTypeId;
    }

    @Column(name = "`AutomaticFeeType`", nullable = true, length = 255)
    public String getAutomaticFeeType() {
        return this.automaticFeeType;
    }

    public void setAutomaticFeeType(String automaticFeeType) {
        this.automaticFeeType = automaticFeeType;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`FieldTypeId`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public FormFieldTypes getFormFieldTypes() {
        return this.formFieldTypes;
    }

    public void setFormFieldTypes(FormFieldTypes formFieldTypes) {
        if(formFieldTypes != null) {
            this.fieldTypeId = formFieldTypes.getId();
        }

        this.formFieldTypes = formFieldTypes;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`FormTypeId`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public FormTypes getFormTypes() {
        return this.formTypes;
    }

    public void setFormTypes(FormTypes formTypes) {
        if(formTypes != null) {
            this.formTypeId = formTypes.getId();
        }

        this.formTypes = formTypes;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof FormTypeFields)) return false;
        final FormTypeFields formTypeFields = (FormTypeFields) o;
        return Objects.equals(getId(), formTypeFields.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

