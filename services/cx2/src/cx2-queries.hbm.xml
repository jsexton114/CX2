<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
  <sql-query name="AdminsMunicipalities">
    <![CDATA[
      select M.* from Municipalities M,Roles R,Users U where U.ID=:user and U.ID=R.UserId and R.MunicipalityId=M.ID
    ]]>
  </sql-query>
  <sql-query name="AdminVendorsList">
    <![CDATA[
      select V.* from Vendor V,VendorAdmins VM,Users U where U.ID=:user and VM.UserId=U.ID and VM.VendorId=V.ID
    ]]>
  </sql-query>
  <sql-query name="CheckingUserWithMunicipalityInRoles">
    <![CDATA[
      select count(*) as exist from Roles where MunicipalityId=:muncipality and UserId=:user
    ]]>
  </sql-query>
  <sql-query name="DeleteCategoryMapping">
    <![CDATA[
      delete from FormCategoryMapping where FormTypeId=:form
    ]]>
  </sql-query>
  <sql-query name="DeleteExistingSubscriptionsForUser">
    <![CDATA[
      delete from UserSubscriptions where UserId=:user
    ]]>
  </sql-query>
  <sql-query name="deleteToken">
    <![CDATA[
      delete from UserPasswordResetTokens where Token =:token
    ]]>
  </sql-query>
  <sql-query name="EmployeesMunicipalities">
    <![CDATA[
      select M.* from Municipalities M,Roles R,Users U where U.ID=:user and U.ID=R.UserId and R.MunicipalityId=M.ID
    ]]>
  </sql-query>
  <sql-query name="getEmailId">
    <![CDATA[
      select Email from Users where ID =:userID
    ]]>
  </sql-query>
  <sql-query name="GetFormTypesByCategoriesAndMunicipalities">
    <![CDATA[
      select FT.* from FormTypes FT,FormCategoryMapping FM,FormCategories FC where FC.ID=:formCategory and FC.ID=FM.FormCategoryId and FM.FormTypeId=FT.ID and FT.MunicipalityId=:municipality
    ]]>
  </sql-query>
  <sql-query name="GetRolesForMunicipality">
    <![CDATA[
      select U.* from Users U,Roles R where  R.RoleName=:role and R.MunicipalityId=:municipality and R.UserId=U.ID
    ]]>
  </sql-query>
  <sql-query name="getUserID">
    <![CDATA[
      select ID from Users where Email =:Email
    ]]>
  </sql-query>
  <sql-query name="getUserIdFromPasswordResetToken">
    <![CDATA[
      select UserId from UserPasswordResetTokens WHERE( ExpirationDate >= GETDATE() AND Token = :token)
    ]]>
  </sql-query>
  <sql-query name="InsertCategoryMapping">
    <![CDATA[
      insert into FormCategoryMapping(FormTypeId,FormCategoryId) values(:FormTypeId,:FormCategoryId)
    ]]>
  </sql-query>
  <sql-query name="InsertGroups">
    <![CDATA[
      insert into MunicipalityGroups (GroupName,GroupDescription,MunicipalityId) values (:GroupName,:GroupDescription,:MunicipalityId)
    ]]>
  </sql-query>
  <sql-query name="InsertNewRole">
    <![CDATA[
      insert into Roles(RoleName,MunicipalityId,Description,UserId) values (:RoleName,:MunicipalityId,:Description,:UserId)
    ]]>
  </sql-query>
  <sql-query name="InsertSubscription">
    <![CDATA[
      insert into UserSubscriptions(UserId,MunicipalityId,DateSubscribed) values(:UserId,:MunicipalityId,:DateSubscribed)
    ]]>
  </sql-query>
  <sql-query name="MapAsAdminForVendor">
    <![CDATA[
      insert into VendorAdmins(UserId,VendorId) values(:UserId,:VendorId)
    ]]>
  </sql-query>
  <sql-query name="MunicipalitiesGroupsCounts">
    <![CDATA[
      select count(*) as groupsCount from MunicipalityGroups where MunicipalityId=:municipality
    ]]>
  </sql-query>
  <sql-query name="MunicipalityCount">
    <![CDATA[
      select count(*) as municipalitiesCount from Municipalities
    ]]>
  </sql-query>
  <sql-query name="resetPasswordForUser">
    <![CDATA[
      UPDATE Users SET Password=:newPassword where ID in (select UserId from UserPasswordResetTokens where ExpirationDate >= GETDATE() and Token = :token)
    ]]>
  </sql-query>
  <sql-query name="resetPasswordWithTokenForUser">
    <![CDATA[
      DELETE FROM UserPasswordResetTokens WHERE UserId = :userid
      INSERT INTO UserPasswordResetTokens (UserId, Token, ExpirationDate) VALUES ( :userid, :token, DATEADD(day, 2, GETDATE()))
    ]]>
  </sql-query>
  <sql-query name="StandardUserMunicipalites">
    <![CDATA[
      select M.* from Municipalities M,UserSubscriptions US,Users U where U.ID=:USER and U.ID=US.UserId and US.MunicipalityId=M.ID
    ]]>
  </sql-query>
  <sql-query name="SubDivisonCount">
    <![CDATA[
      select count(*) as SubDivisonCount from Subdivisions where MunicipalityId=:municipalityId
    ]]>
  </sql-query>
  <sql-query name="UpdateAsCXVendorAdmin">
    <![CDATA[
      update Roles set roleName=:role,MunicipalityId=:municipality where UserId=:user
    ]]>
  </sql-query>
  <sql-query name="UpdateCFInProfile">
    <![CDATA[
      Update Users set CommunicationFrequency=:cf where ID=:user
    ]]>
  </sql-query>
  <sql-query name="UpdateGlobalEmailSig">
    <![CDATA[
      Update Municipalities set GlobalEmailSig=:gs where ID=:municipality
    ]]>
  </sql-query>
  <sql-query name="UpdateInfoFromMyProfile">
    <![CDATA[
      Update Users set FirstName=:fn,LastName=:ln,Email=:em,PhoneNumber=:ph,Address1=:ad1,Address2=:ad2,StateId=:st,City=:ct,Country=:ctry,PostalCode=:pc where ID=:user
    ]]>
  </sql-query>
  <sql-query name="UpdateMunicipalityInfo">
    <![CDATA[
      Update Municipalities set MunicipalityName=:mn,Email=:em,Phone=:ph,Address1=:ad1,Address2=:ad2,StateId=:st,City=:ct,PostalCode=:pc where ID=:municipality
    ]]>
  </sql-query>
  <sql-query name="UpdateNewPassword">
    <![CDATA[
      UPDATE Users SET Password=:password where ID=:newUser
    ]]>
  </sql-query>
  <sql-query name="UpdatePasswordAndCF">
    <![CDATA[
      UPDATE Users SET Password=:password, CommunicationFrequency=:cf where ID=:newUser
    ]]>
  </sql-query>
  <sql-query name="UpdateRoleForMunicipality">
    <![CDATA[
      update Roles set RoleName=:role where MunicipalityId=:municipality and UserId=:user
    ]]>
  </sql-query>
  <sql-query name="UpdateVendorStatus">
    <![CDATA[
      Update VendorApprovals set DateApproved=:DateApproved,ApprovedBy=:ApprovedBy,ExpiresDate=:ExpiresDate,Active=:Active,ApprovalStatus=:ApprovalStatus,Reviewer=:Reviewer where MunicipalityId=:municipality and VendorId=:vendor
    ]]>
  </sql-query>
  <sql-query name="UpdateWorkMunicipality">
    <![CDATA[
      Update Municipalities set MondayYN=:monday,TuesdayYN=:tuesday,WednesdayYN=:wednesday,ThursdayYN=:thursday,FridayYN=:friday,SaturdayYN=:saturday,SundayYN=:sunday,TimeZone=:timezone,OpenTime=:openTime,CloseTime=:closeTime where ID=:municipalityId
    ]]>
  </sql-query>
  <sql-query name="UserCount">
    <![CDATA[
      select count(*) as usersCount from Users
    ]]>
  </sql-query>
  <sql-query name="userSubscriptionsCount">
    <![CDATA[
      select count(*) as userSubscriptionsCount from UserSubscriptions
    ]]>
  </sql-query>
  <sql-query name="userSubscriptionsCountForMunicipality">
    <![CDATA[
      select count(*) as userSubscriptionsCountForMunicipality from UserSubscriptions where MunicipalityId=:municipalityId
    ]]>
  </sql-query>
  <sql-query name="verifyPasswordResetToken">
    <![CDATA[
      select * from UserPasswordResetTokens WHERE( ExpirationDate >= GETDATE() AND Token = :token)
    ]]>
  </sql-query>
</hibernate-mapping>