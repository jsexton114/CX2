<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
  <sql-query name="AddGIStoForms">
    <![CDATA[
      insert into GIS2Forms(GISRecordId,RelatedFormGUID,AddedBy,AddedTime) values(:GISRecordId,:RelatedFormGUID,:AddedBy,:AddedTime)
    ]]>
  </sql-query>
  <sql-query name="AddingVendorsToForm">
    <![CDATA[
      insert into Vendors2Form(RelatedFormGUID,SharedOn,VendorId) values(:RelatedFormGUID,:SharedOn,:VendorId)
    ]]>
  </sql-query>
  <sql-query name="AddUsersToVendor">
    <![CDATA[
      insert into  VendorUsers(VendorId,UserId,JoiningDate) values(:VendorId,:UserId,:JoiningDate)
    ]]>
  </sql-query>
  <sql-query name="AdminsMunicipalities">
    <![CDATA[
      select M.* from Municipalities M,Roles R,Users U where U.ID=:user and U.ID=R.UserId and R.MunicipalityId=M.ID  and R.RoleName='MunicipalityAdmin'
    ]]>
  </sql-query>
  <sql-query name="AdminVendorsList">
    <![CDATA[
      select V.* from Vendor V,VendorAdmins VM,Users U where U.ID=:user and VM.UserId=U.ID and VM.VendorId=V.ID
    ]]>
  </sql-query>
  <sql-query name="bannedDetails">
    <![CDATA[
      select Banned from Users where Email =:emailid
    ]]>
  </sql-query>
  <sql-query name="CheckingUserWithInVendorUsers">
    <![CDATA[
      select count(*) as exist from VendorUsers where UserId=:user and VendorId=:vendor
    ]]>
  </sql-query>
  <sql-query name="CheckingUserWithMunicipalityInRoles">
    <![CDATA[
      select count(*) as exist from Roles where MunicipalityId=:muncipality and UserId=:user and RoleName='MunicipalityEmployee'
    ]]>
  </sql-query>
  <query name="CompanyFormsByVendorId">
    <![CDATA[
      from MasterForms where Closed=:closed and  FormGUID IN (select relatedFormGuid from Vendors2form where vendorId=:vendorId ) ORDER BY DateModified DESC
    ]]>
  </query>
  <sql-query name="CountOfCompnayFormsByVendorId">
    <![CDATA[
      select count(*) as count from MasterForms where Closed=:closed and  FormGUID IN (select RelatedFormGUID from Vendors2Form where VendorId=:vendorId )
    ]]>
  </sql-query>
  <sql-query name="CountOfFormsForMunicipality">
    <![CDATA[
      select count(distinct FT.ID) as count from FormTypes FT,FormCategoryMapping FM,FormCategories FC where FC.MunicipalityId=:MunicipalityId and FC.ID=FM.FormCategoryId and FM.FormTypeId=FT.ID
    ]]>
  </sql-query>
  <sql-query name="CountOfMuncipalityApplicationsByVendor">
    <![CDATA[
      select count(*) as count from VendorApprovals where VendorId=:VendorId
    ]]>
  </sql-query>
  <sql-query name="CountOfProcessFormsByMuncipality">
    <![CDATA[
      select count(*) as count from MasterForms MF,MunicipalityGroupMembers GM,MunicipalityGroups MG where GM.UserId=:UserId and GM.MunicipalityGroupId=MG.ID and MG.ID=MF.AssignedToGroupId and MF.MunicipalityId=:MunicipalityId and MF.Closed=:closed
    ]]>
  </sql-query>
  <sql-query name="CountOfUserForms">
    <![CDATA[
      select count(*) as count from MasterForms where Closed=:closed and (UserId=:creatorUser or FormGUID IN (select RelatedGUID from  SharedWith where SharedWithUser = :sharedWithUser ))
    ]]>
  </sql-query>
  <sql-query name="CountOfUserFormsForMunicipality">
    <![CDATA[
      select count(*) as count from MasterForms where MunicipalityId=:MunicipalityId and Closed=:closed and (UserId=:creatorUser or FormGUID IN (select RelatedGUID from  SharedWith where SharedWithUser = :sharedWithUser ))
    ]]>
  </sql-query>
  <sql-query name="CountOfVendors">
    <![CDATA[
      select count(*) as CountOfVendors from VendorAdmins where UserId=:vendor
    ]]>
  </sql-query>
  <sql-query name="CountOfVendorUsers">
    <![CDATA[
      select count(*) as CountOfVendorUsers from VendorUsers where VendorId=:vendor
    ]]>
  </sql-query>
  <sql-query name="DeleteCategoryMapping">
    <![CDATA[
      delete from FormCategoryMapping where FormTypeId=:form
    ]]>
  </sql-query>
  <sql-query name="DeleteExistingSubscriptionsForUser">
    <![CDATA[
      delete from UserSubscriptions where UserId=:user
    ]]>
  </sql-query>
  <sql-query name="DeleteFromVendorAdmins">
    <![CDATA[
      delete from VendorAdmins where UserId=:user and VendorId=:vendor
    ]]>
  </sql-query>
  <sql-query name="DeleteFromVendorUsers">
    <![CDATA[
      delete from VendorUsers where UserId=:user and VendorId=:vendor
    ]]>
  </sql-query>
  <sql-query name="deleteMunicipalityGroup">
    <![CDATA[
      delete from MunicipalityGroupMembers where MunicipalityGroupId =:MunicipalityGroupId AND UserId =:UserId
    ]]>
  </sql-query>
  <sql-query name="DeleteRoleForMuncipality">
    <![CDATA[
      delete from Roles where RoleName=:role and MunicipalityId=:municipality and UserId=:user
    ]]>
  </sql-query>
  <sql-query name="deleteToken">
    <![CDATA[
      delete from UserPasswordResetTokens where Token =:token
    ]]>
  </sql-query>
  <sql-query name="EmployeesMunicipalities">
    <![CDATA[
      select M.* from Municipalities M,Roles R,Users U where U.ID=:user and U.ID=R.UserId and R.MunicipalityId=M.ID and R.RoleName='MunicipalityEmployee'
    ]]>
  </sql-query>
  <sql-query name="EmployeesOrAdminsMunicipalities">
    <![CDATA[
      select M.* from Municipalities M,Roles R,Users U where U.ID=:user and U.ID=R.UserId and R.MunicipalityId=M.ID and R.RoleName=:role
    ]]>
  </sql-query>
  <sql-query name="FormsByCategory">
    <![CDATA[
      select FT.* from FormTypes FT,FormCategoryMapping FM,FormCategories FC where FC.ID=:formCategory and FC.ID=FM.FormCategoryId and FM.FormTypeId=FT.ID and FT.Active=:isActive and FT.MunicipalityInternalForm=0
    ]]>
  </sql-query>
  <sql-query name="FormsCountForMunicipalities">
    <![CDATA[
      select count(*) as formsCount from MasterForms where MunicipalityId=:MunicipalityId
    ]]>
  </sql-query>
  <query name="FormsForUsersAndShared">
    <![CDATA[
      from MasterForms where Closed=:closed and (UserId=:creatorUser or FormGUID IN (select relatedGuid from  SharedWith where SharedWithUser = :sharedWithUser )) ORDER BY DateModified DESC
    ]]>
  </query>
  <query name="FormsTaggedWithGISRecords">
    <![CDATA[
      from MasterForms where FormGUID IN (select relatedFormGuid from Gis2forms where gisrecordId=:gisrecordId ) ORDER BY DateModified DESC
    ]]>
  </query>
  <sql-query name="getEmailId">
    <![CDATA[
      select Email from Users where ID =:userID
    ]]>
  </sql-query>
  <sql-query name="GetFormsForMunicpality">
    <![CDATA[
      select DISTINCT * from FormTypes where MunicipalityId=:MunicipalityId
    ]]>
  </sql-query>
  <query name="getFormTypeFieldsByTypeId">
    <![CDATA[
      FROM FormTypeFields WHERE FormTypeId=:formTypeId order by DisplayOrder asc
    ]]>
  </query>
  <sql-query name="GetFormTypesByCategoriesAndMunicipalities">
    <![CDATA[
      select FT.* from FormTypes FT,FormCategoryMapping FM,FormCategories FC where FC.ID=:formCategory and FC.ID=FM.FormCategoryId and FM.FormTypeId=FT.ID and FT.Active=:isActive and
      (FT.MunicipalityInternalForm=0 or exists (SELECT RoleName from Roles where UserId=:userId and (MunicipalityId=FC.MunicipalityId and (RoleName='MunicipalityEmployee' or RoleName='MunicipalityAdmin')) or RoleName='CXAdmin'))
    ]]>
  </sql-query>
  <sql-query name="getListofGroupName">
    <![CDATA[
      select ID,GroupName from MunicipalityGroups where ID IN :MunicipalityGroupID AND MunicipalityId =:MunicipalityID
    ]]>
  </sql-query>
  <sql-query name="getListofUsers">
    <![CDATA[
      select a.UserId , b.Email, b.FullName from Roles a INNER JOIN Users b on a.UserId = b.ID where a.RoleName IN ('MunicipalityEmployee','MunicipalityAdmin') and a.MunicipalityId =:municipalityID and (b.Email LIKE LOWER(concat('%',:Email,'%')) OR LOWER(b.FullName) LIKE LOWER(CONCAT('%',:Email,'%')))
    ]]>
  </sql-query>
  <sql-query name="getMunicipalityGroupIdIDs">
    <![CDATA[
      select MunicipalityGroupId from MunicipalityGroupMembers where UserId =:userID
    ]]>
  </sql-query>
  <sql-query name="GetProcessGroupMemebersByFormGUID">
    <![CDATA[
      select MGM.*,MG.GroupName from MunicipalityGroupMembers MGM,MunicipalityGroups MG, MasterForms MF where  MF.FormGUID=:FormGUID and MG.ID=MF.AssignedToGroupId and MG.ID=MGM.MunicipalityGroupId
    ]]>
  </sql-query>
  <query name="GetRecentMessageId">
    <![CDATA[
      from FormMessages where RelatedFormGUID=:form and PostedAt=:PostedAt
    ]]>
  </query>
  <sql-query name="GetRolesForMunicipality">
    <![CDATA[
      select U.* from Users U,Roles R where  R.RoleName=:role and R.MunicipalityId=:municipality and R.UserId=U.ID
    ]]>
  </sql-query>
  <sql-query name="getRolesForUser">
    <![CDATA[
      SELECT RoleName, MunicipalityId FROM Roles WHERE UserId=:userId
    ]]>
  </sql-query>
  <sql-query name="getUserID">
    <![CDATA[
      select ID from Users where Email =:Email
    ]]>
  </sql-query>
  <sql-query name="getUserIdFromPasswordResetToken">
    <![CDATA[
      select UserId from UserPasswordResetTokens WHERE( ExpirationDate >= GETDATE() AND Token = :token)
    ]]>
  </sql-query>
  <sql-query name="GetWriteAccessGroupMembersByFormGUID">
    <![CDATA[
      select MGM.*,MG.GroupName from MunicipalityGroupMembers MGM,MunicipalityGroups MG, MasterForms MF,FormStatuses FS where  MF.FormGUID=:FormGUID and MF.FormStatusId=FS.ID and FS.WriteAccess=MG.ID and MG.ID=MGM.MunicipalityGroupId
    ]]>
  </sql-query>
  <sql-query name="InsertCategoryMapping">
    <![CDATA[
      insert into FormCategoryMapping(FormTypeId,FormCategoryId) values(:FormTypeId,:FormCategoryId)
    ]]>
  </sql-query>
  <sql-query name="InsertFormMessage">
    <![CDATA[
      insert into FormMessages(UserId,RelatedFormGUID,Message,PostedAt) values(:UserId,:RelatedFormGUID,:Message,:PostedAt)
    ]]>
  </sql-query>
  <sql-query name="InsertGroups">
    <![CDATA[
      insert into MunicipalityGroups (GroupName,GroupDescription,MunicipalityId) values (:GroupName,:GroupDescription,:MunicipalityId)
    ]]>
  </sql-query>
  <sql-query name="InsertNewRole">
    <![CDATA[
      insert into Roles(RoleName,MunicipalityId,Description,UserId) values (:RoleName,:MunicipalityId,:Description,:UserId)
    ]]>
  </sql-query>
  <sql-query name="InsertSubscription">
    <![CDATA[
      insert into UserSubscriptions(UserId,MunicipalityId,DateSubscribed) values(:UserId,:MunicipalityId,:DateSubscribed)
    ]]>
  </sql-query>
  <sql-query name="InsertTagForMessage">
    <![CDATA[
      Insert into FormMessageTagging(FormMessageId,TaggedPersonId) values(:FormMessageId,:TaggedPersonId)
    ]]>
  </sql-query>
  <sql-query name="ManualFeeTypeCountForMunicipality">
    <![CDATA[
      Select count(*) from ManualFeeTypes where MunicipalityId=:MunicipalityId
    ]]>
  </sql-query>
  <sql-query name="MapAsAdminForVendor">
    <![CDATA[
      insert into VendorAdmins(UserId,VendorId) values(:UserId,:VendorId)
    ]]>
  </sql-query>
  <sql-query name="MunicipalitiesGroupsCounts">
    <![CDATA[
      select count(*) as groupsCount from MunicipalityGroups where MunicipalityId=:municipality
    ]]>
  </sql-query>
  <sql-query name="MunicipalityCount">
    <![CDATA[
      select count(*) as municipalitiesCount from Municipalities
    ]]>
  </sql-query>
  <query name="ProcessFormsForUserByMunicipality">
    <![CDATA[
      from MasterForms MF,MunicipalityGroupMembers GM,MunicipalityGroups MG where GM.userId=:UserId and GM.municipalityGroupId=MG.id and MG.id=MF.assignedToGroupId and MF.municipalityId=:MunicipalityId and MF.closed=:Closed ORDER BY DateModified DESC
    ]]>
  </query>
  <sql-query name="RecordFormHistory">
    <![CDATA[
      insert into FormHistory(FormGUID,FormTypeId,NewStatusId,OldStatusId,Comments,CreatedBy,CreatedTime) values(:FormGUID,:FormTypeId,:NewStatusId,:OldStatusId,:Comments,:CreatedBy,SYSUTCDATETIME())
    ]]>
  </sql-query>
  <sql-query name="RemoveVendorFromMasterForms">
    <![CDATA[
      Update MasterForms set  CXVendorId=null where FormGUID=:hb
    ]]>
  </sql-query>
  <sql-query name="resetPasswordForUser">
    <![CDATA[
      UPDATE Users SET Password=:newPassword where ID in (select UserId from UserPasswordResetTokens where ExpirationDate >= GETDATE() and Token = :token)
    ]]>
  </sql-query>
  <sql-query name="resetPasswordWithTokenForUser">
    <![CDATA[
      DELETE FROM UserPasswordResetTokens WHERE UserId = :userid
      INSERT INTO UserPasswordResetTokens (UserId, Token, ExpirationDate) VALUES ( :userid, :token, DATEADD(day, 2, GETDATE()))
    ]]>
  </sql-query>
  <query name="SearchFormByVendor">
    <![CDATA[
      from MasterForms where SubmittedOn BETWEEN :startd and :endd and FormTypeId=:FormTypeId and  Closed=:closed and  FormGUID IN (select relatedFormGuid from Vendors2form where vendorId=:vendorId ) ORDER BY DateModified DESC
    ]]>
  </query>
  <sql-query name="SetPrimaryVendorStatusForFormandVendor">
    <![CDATA[
      update Vendors2Form set PrimaryVendor=:pv where RelatedFormGUID=:form and VendorID=:vendor
    ]]>
  </sql-query>
  <sql-query name="StandardUserMunicipalites">
    <![CDATA[
      select M.* from Municipalities M,UserSubscriptions US,Users U where U.ID=:USER and U.ID=US.UserId and US.MunicipalityId=M.ID ORDER BY M.MunicipalityName ASC
    ]]>
  </sql-query>
  <sql-query name="SubDivisonCount">
    <![CDATA[
      select count(*) as SubDivisonCount from Subdivisions where MunicipalityId=:municipalityId
    ]]>
  </sql-query>
  <sql-query name="UpdateAsCXVendorAdmin">
    <![CDATA[
      update Roles set roleName=:role,MunicipalityId=:municipality where UserId=:user
    ]]>
  </sql-query>
  <sql-query name="UpdateCFInProfile">
    <![CDATA[
      Update Users set CommunicationFrequency=:cf where ID=:user
    ]]>
  </sql-query>
  <sql-query name="UpdateDevFormDetailsForCXAdmin">
    <![CDATA[
      UPDATE FormTypes set Report=:Report, FormTableName=:FormTableName where ID=:form
    ]]>
  </sql-query>
  <sql-query name="UpdateFormStatusInMasterForms">
    <![CDATA[
      Update MasterForms set FormStatusId=:formStatus, Closed=:closed where FormGUID=:FormGUID
    ]]>
  </sql-query>
  <sql-query name="UpdateGlobalEmailSig">
    <![CDATA[
      Update Municipalities set GlobalEmailSig=:gs where ID=:municipality
    ]]>
  </sql-query>
  <sql-query name="UpdateInfoFromMyProfile">
    <![CDATA[
      Update Users set FirstName=:fn,LastName=:ln,Email=:em,PhoneNumber=:ph,Address1=:ad1,Address2=:ad2,StateId=:st,City=:ct,Country=:ctry,PostalCode=:pc where ID=:user
    ]]>
  </sql-query>
  <sql-query name="UpdateMunicipalityInfo">
    <![CDATA[
      Update Municipalities set MunicipalityName=:mn,Email=:em,Phone=:ph,Address1=:ad1,Address2=:ad2,StateId=:st,City=:ct,PostalCode=:pc where ID=:municipality
    ]]>
  </sql-query>
  <sql-query name="UpdateNewPassword">
    <![CDATA[
      UPDATE Users SET Password=:password where ID=:newUser
    ]]>
  </sql-query>
  <sql-query name="UpdatePasswordAndCF">
    <![CDATA[
      UPDATE Users SET Password=:password, CommunicationFrequency=:cf where ID=:newUser
    ]]>
  </sql-query>
  <sql-query name="UpdatePrimaryVendorInMasterForms">
    <![CDATA[
      Update MasterForms set CXVendorId=:VendorId where FormGUID=:FormGUID
    ]]>
  </sql-query>
  <sql-query name="UpdatePrimaryVendorStatusInVEndor2Forms">
    <![CDATA[
      update Vendors2Form set PrimaryVendor=:pv where RelatedFormGUID=:form
    ]]>
  </sql-query>
  <sql-query name="UpdateProcessOwnersForGUID">
    <![CDATA[
      update MasterForms set AssignedToGroupId=:AssignedToGroupId where FormGUID=:GUID
    ]]>
  </sql-query>
  <sql-query name="UpdateRoleForMunicipality">
    <![CDATA[
      update Roles set RoleName=:role where MunicipalityId=:municipality and UserId=:user
    ]]>
  </sql-query>
  <sql-query name="UpdateVendorForMasterForms">
    <![CDATA[
      update MasterForms set CXVendorId=:CXVendorId where FormGUID=:FormGUID
    ]]>
  </sql-query>
  <sql-query name="UpdateVendorStatus">
    <![CDATA[
      Update VendorApprovals set DateApproved=:DateApproved,ApprovedBy=:ApprovedBy,ExpiresDate=:ExpiresDate,Active=:Active,ApprovalStatus=:ApprovalStatus,Reviewer=:Reviewer where MunicipalityId=:municipality and VendorId=:vendor
    ]]>
  </sql-query>
  <sql-query name="UpdateWorkMunicipality">
    <![CDATA[
      Update Municipalities set MondayYN=:monday,TuesdayYN=:tuesday,WednesdayYN=:wednesday,ThursdayYN=:thursday,FridayYN=:friday,SaturdayYN=:saturday,SundayYN=:sunday,TimeZone=:timezone,OpenTime=:openTime,CloseTime=:closeTime where ID=:municipalityId
    ]]>
  </sql-query>
  <sql-query name="UserCount">
    <![CDATA[
      select count(*) as usersCount from Users
    ]]>
  </sql-query>
  <sql-query name="userSubscriptionsCount">
    <![CDATA[
      select count(*) as userSubscriptionsCount from UserSubscriptions
    ]]>
  </sql-query>
  <sql-query name="userSubscriptionsCountForMunicipality">
    <![CDATA[
      select count(*) as userSubscriptionsCountForMunicipality from UserSubscriptions where MunicipalityId=:municipalityId
    ]]>
  </sql-query>
  <sql-query name="VendorCount">
    <![CDATA[
      select count(*) as VendorCount from Vendor
    ]]>
  </sql-query>
  <sql-query name="VendorsCountForMunicipalities">
    <![CDATA[
      select count(*) as vendorsCount from VendorApprovals where MunicipalityId=:MunicipalityId
    ]]>
  </sql-query>
  <query name="VendorsLinkedWithForm">
    <![CDATA[
      from Vendor where id IN (select vendorId from Vendors2form where relatedFormGuid=:RelatedFormGUID)
    ]]>
  </query>
  <sql-query name="verifyPasswordResetToken">
    <![CDATA[
      select * from UserPasswordResetTokens WHERE( ExpirationDate >= GETDATE() AND Token = :token)
    ]]>
  </sql-query>
</hibernate-mapping>