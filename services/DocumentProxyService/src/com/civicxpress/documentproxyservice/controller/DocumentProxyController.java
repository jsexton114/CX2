/**This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/
package com.civicxpress.documentproxyservice.controller;

import com.civicxpress.documentproxyservice.DocumentProxyService;
import java.lang.String;
import org.springframework.http.HttpMethod;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.lang.Exception;
import java.lang.Object;
import java.util.HashMap;
import org.springframework.web.bind.annotation.*;
import org.springframework.http.MediaType;
import org.springframework.beans.factory.annotation.Autowired;
import com.wordnik.swagger.annotations.Api;
import com.wordnik.swagger.annotations.ApiOperation;
import com.wordnik.swagger.annotations.ApiParam;
import com.wavemaker.tools.api.core.annotations.WMAccessVisibility;
import com.wavemaker.tools.api.core.models.AccessSpecifier;

@RestController
@RequestMapping(value = "/documentProxy")
public class DocumentProxyController {

    @Autowired
    private DocumentProxyService documentProxyService;

    @RequestMapping(value = "/**", method = RequestMethod.GET)
    @ResponseBody
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public byte[] forwardGetRequest(HttpMethod method, HttpServletRequest request, HttpServletResponse response) throws Exception {
        return documentProxyService.forwardGetRequest(method, request, response);
    }

    @RequestMapping(value = "/**", method = RequestMethod.POST, produces = "application/json")
    @ResponseBody
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public HashMap<String, Object> forwardRequest(@RequestBody String body, HttpMethod method, HttpServletRequest request, HttpServletResponse response) throws Exception {
        return documentProxyService.forwardRequest(body, method, request, response);
    }

    @RequestMapping(value = "/**", method = RequestMethod.OPTIONS, produces = "application/json")
    @ResponseBody
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public HashMap<String, Object> forwardOptionsRequest(@RequestBody String body, HttpMethod method, HttpServletRequest request, HttpServletResponse response) throws Exception {
        return documentProxyService.forwardRequest(body, method, request, response);
    }
}
